{"version":3,"sources":["components/Home.js","components/VisualizeSnippet.js","components/Play.js","components/Admin.js","components/Instructions.js","components/VisualizeGame.js","App.js","serviceWorker.js","index.js"],"names":["uuidv4","require","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","games","getGames","bind","assertThisInitialized","playGame","_this2","axios","get","then","res","data","setState","catch","err","console","log","id","redirect","concat","_this3","react_default","a","createElement","react_router","to","gameJSX","map","item","className","key","name","snippets","length","onClick","React","Component","VisualizeSnippet","snippet","snippetData","interpsData","interps","snippetChars","text","split","snippetId","match","undefined","params","value","index","percentHighlighted","v","i","selection","reduce","total","computedHighlightColor","toString","computedLetterColor","style","backgroundColor","method","color","Play","pageNum","highlightedRange","gameSnippets","fullSnippets","selections","loadingNew","submittedCurrent","mobileInput","getGame","getSnippet","nextPage","handleContentSelect","resetContentSelect","submitCurrent","handleMobileInput","userId","newUser","gameId","gameName","currSnippet","range","newRange","start","selectionStart","end","selectionEnd","_this4","window","setTimeout","event","input","target","first","indexOf","last","_this5","highlightedChars","Array","apply","_loop","_this5$state$highligh","interpData","user","postData","patch","_this6","paste","snip","allSnip","Highlighter_default","selectionHandler","customClass","isTouch","float","paddingLeft","type","onChange","components_VisualizeSnippet","gotInput","buttons","data-tip","data-for","dist_default","place","effect","clickable","getContent","Admin","snippetText","getData","handleChange","addGame","addSnippet","deleteItem","defineProperty","formattedSnippets","post","resource","delete","_this$state","snippetJSX","queryString","Instructions","_useState","useState","_useState2","slicedToArray","setRedirect","_useCookies","useCookies","_useCookies2","cookies","setCookie","path","parsed","parse","location","search","next","touchInstructs","VisualizeGame","nextIndex","parseInt","gamePlays","viz","GetRandomGame","setId","rand","Math","floor","random","App","userIdcookies","setUserIdCookie","_useCookies3","_useCookies4","newUserCookies","setNewUserCookie","useEffect","touch","matchMedia","matches","react_router_dom","exact","render","components_Home","assign","App_GetRandomGame","components_Instructions","component","components_Play","Boolean","hostname","ReactDOM","es6","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0a0fa93.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport { Redirect } from \"react-router\";\n\nconst uuidv4 = require(\"uuid/v4\");\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: []\n    };\n    this.getGames = this.getGames.bind(this);\n    this.playGame = this.playGame.bind(this);\n  }\n\n  componentDidMount() {\n    this.getGames();\n  }\n\n  getGames() {\n    axios\n      .get(\"/api/games\")\n      .then(res => {\n        if (res.data) {\n          this.setState({\n            games: res.data\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  playGame(id) {\n    this.setState({ redirect: `/play/${id}/` });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n\n    let { games } = this.state;\n\n    const gameJSX = games.map(item => {\n      return (\n        <div className=\"item centered\" key={uuidv4()}>\n          <h2>{item.name}</h2>\n          <p>{item.snippets.length} Snippets</p>\n          <button\n            onClick={() => {\n              this.setState({ redirect: `/game-results/${item.id}` });\n            }}\n          >\n            View Results\n          </button>\n          <button onClick={() => this.playGame(item.id)}>Contribute →</button>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"wrapperFlex\">{gameJSX}</div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport axios from \"axios\";\n\nconst uuidv4 = require(\"uuid/v4\");\n\nclass VisualizeSnippet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snippet: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.snippetData && this.props.interpsData) {\n      this.setState({\n        snippet: this.props.snippetData,\n        interps: this.props.interpsData,\n        snippetChars: this.props.snippetData.text.split(\"\")\n      });\n    } else {\n      let id = this.props.snippetId;\n      if (this.props.match) {\n        id = this.props.match.params.id;\n        if (id === undefined) {\n          id = this.props.snippetId;\n        }\n      }\n      axios\n        .get(`/api/snippets/${id}`)\n        .then(res => {\n          if (res.data) {\n            this.setState({\n              snippet: res.data[0],\n              interps: res.data[0].interps,\n              snippetChars: res.data[0].text.split(\"\")\n            });\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    let snippet = <div />;\n\n    if (this.state.interps) {\n      snippet = this.state.snippetChars.map((value, index) => {\n        const characterHighlights = this.state.interps.map((v, i) => {\n          return v.selection[index];\n        });\n        const sum = characterHighlights.reduce((total, value) => {\n          if (value) {\n            return total + 1;\n          }\n          return total;\n        });\n        const percentHighlighted = sum / this.state.interps.length;\n        const computedHighlightColor = `rgba(249, 140, 94, ${percentHighlighted.toString()})`;\n        const computedLetterColor = `rgba(0, 0, 0, ${percentHighlighted.toString()})`;\n        const style = {\n          backgroundColor:\n            this.props.method === \"highlight\" ? computedHighlightColor : \"\",\n          color: this.props.method === \"opacity\" ? computedLetterColor : \"\"\n        };\n        //className={this.state.selections[this.state.pageNum - 1][index] ? 'colored' : '' }\n        return (\n          <span style={style} key={uuidv4()}>\n            {value}\n          </span>\n        );\n      });\n    }\n\n    return <div>{snippet}</div>;\n  }\n}\n\nexport default VisualizeSnippet;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport ReactTooltip from \"react-tooltip\";\nimport SelectionHighlighter from \"react-highlight-selection\";\n\nimport VisualizeSnippet from \"./VisualizeSnippet\";\n\nclass Play extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNum: 1,\n      highlightedRange: [],\n      gameSnippets: [],\n      fullSnippets: [],\n      selections: [],\n      loadingNew: true,\n      submittedCurrent: false,\n      mobileInput: \"\"\n    };\n    this.getGame = this.getGame.bind(this);\n    this.getSnippet = this.getSnippet.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.handleContentSelect = this.handleContentSelect.bind(this);\n    this.resetContentSelect = this.resetContentSelect.bind(this);\n    this.submitCurrent = this.submitCurrent.bind(this);\n    this.handleMobileInput = this.handleMobileInput.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    console.log(\"User \" + this.props.userId);\n\n    if (this.props.newUser === \"true\" || this.props.newUser === undefined) {\n      this.setState({ redirect: `/instructions/?redirect=${id}` });\n    } else {\n      this.setState({\n        gameId: id\n      });\n      this.getGame(id);\n    }\n  }\n\n  getGame(id) {\n    axios\n      .get(`/api/games/${id}`)\n      .then(res => {\n        if (res.data) {\n          this.setState({\n            gameName: res.data[0].name,\n            gameSnippets: res.data[0].snippets\n          });\n          this.getSnippet(this.state.pageNum);\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  getSnippet(index) {\n    axios\n      .get(`/api/snippets/${this.state.gameSnippets[index - 1].id}`)\n      .then(res => {\n        if (res.data) {\n          this.setState({\n            currSnippet: res.data[0],\n            loadingNew: false\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  nextPage() {\n    if (this.state.pageNum + 1 > this.state.gameSnippets.length) {\n      this.setState({\n        redirect: `/game-results/${this.state.gameId}/?next=true`\n      });\n    } else {\n      // this.props.history.push({\n      //   pathname: `/play/${this.state.gameId}/`,\n      //   search: `?page=${this.state.pageNum + 1}`\n      // });\n      this.setState({\n        pageNum: this.state.pageNum + 1,\n        submittedCurrent: false\n      });\n      this.getSnippet(this.state.pageNum + 1);\n      this.resetContentSelect();\n    }\n  }\n\n  handleContentSelect(range) {\n    const newRange = {\n      text: range.selection,\n      start: range.selectionStart,\n      end: range.selectionEnd\n    };\n    // since we are allowing just one selection at a time, add the new range by\n    // itself. Rather than this.state.highlightedRange.concat(newRange)\n    this.setState({\n      highlightedRange: [newRange]\n    });\n  }\n\n  resetContentSelect() {\n    this.setState({ loadingNew: true, highlightedRange: [] }, () => {\n      // have to reset the highlight by rerendering the highlight component\n      window.setTimeout(() => {\n        this.setState({ loadingNew: false });\n      }, 100);\n    });\n  }\n\n  handleMobileInput(event) {\n    const target = event.target;\n    const input = target.value;\n    const first = this.state.currSnippet.text.indexOf(input);\n    const last = this.state.currSnippet.text.indexOf(input) + input.length - 1;\n    if (\n      first >= 0 &&\n      first < this.state.currSnippet.text.length &&\n      last >= 0 &&\n      last < this.state.currSnippet.text.length &&\n      last > first\n    ) {\n      const newRange = {\n        text: input,\n        start: first,\n        end: last\n      };\n      this.setState({ highlightedRange: [newRange] });\n    }\n    this.setState({ mobileInput: input });\n  }\n\n  submitCurrent() {\n    // convert range to array of indicies with bool for selection\n    let highlightedChars = Array.apply(\n      null,\n      Array(this.state.currSnippet.text.length)\n    ).map(value => false);\n\n    // leaving this as an array for easy conversion to multiple line selection later\n    for (const i in this.state.highlightedRange) {\n      const { start, end } = this.state.highlightedRange[i];\n      highlightedChars = highlightedChars.map((value, index) => {\n        if (index >= start && index <= end) {\n          return true;\n        }\n        return value;\n      });\n    }\n\n    this.setState(\n      {\n        submittedCurrent: true,\n        fullSnippets: this.state.fullSnippets.concat(this.state.currSnippet),\n        selections: this.state.selections.concat([highlightedChars]),\n        mobileInput: \"\"\n      },\n      () => {\n        if (\n          this.state.pageNum === this.state.gameSnippets.length &&\n          this.state.fullSnippets.length === this.state.selections.length\n        ) {\n          for (const i in this.state.fullSnippets) {\n            const interpData = {\n              user: this.props.userId,\n              selection: this.state.selections[i]\n            };\n            const postData = {\n              text: this.state.fullSnippets[i].text,\n              id: this.state.fullSnippets[i].id,\n              interps:\n                this.state.fullSnippets[i].interps.length > 0\n                  ? this.state.fullSnippets[i].interps.concat([interpData])\n                  : [interpData]\n            };\n            axios\n              .patch(`/api/snippets/${this.state.fullSnippets[i].id}`, postData)\n              .then(res => {\n                if (res.data) {\n                  //console.log(res.data);\n                }\n              })\n              .catch(err => console.log(err));\n          }\n        }\n      }\n    );\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n\n    let paste = <div />;\n    let snip = <div />;\n    let allSnip = <div />;\n    if (this.state.currSnippet && !this.state.loadingNew) {\n      snip = (\n        <SelectionHighlighter\n          text={this.state.currSnippet.text}\n          selectionHandler={this.handleContentSelect}\n          customClass=\"highlighted\"\n        />\n      );\n    }\n\n    if (this.props.isTouch && !this.state.submittedCurrent)\n      paste = (\n        <div>\n          <p style={{ float: \"left\", paddingLeft: 20 }}>Paste your selection</p>\n          <input\n            type=\"text\"\n            onChange={this.handleMobileInput}\n            name=\"mobileInput\"\n            value={this.state.mobileInput}\n          />\n        </div>\n      );\n\n    if (this.state.submittedCurrent) {\n      // add the current interp to list of interps to visualize\n      const interps = this.state.fullSnippets[\n        this.state.pageNum - 1\n      ].interps.concat({\n        selection: this.state.selections[this.state.pageNum - 1]\n      });\n\n      allSnip = (\n        <VisualizeSnippet\n          snippetData={this.state.currSnippet}\n          interpsData={interps}\n          method=\"highlight\"\n        />\n      );\n    }\n\n    const gotInput = this.state.highlightedRange.length > 0;\n    let buttons = (\n      <div>\n        <button onClick={this.resetContentSelect} className=\"light\">\n          Reset Selection\n        </button>\n        <button\n          onClick={gotInput ? this.submitCurrent : () => {}}\n          className={gotInput ? \"\" : \"disabled\"}\n          data-tip\n          data-for=\"helpMakingSelection\"\n        >\n          Compare Selection →\n        </button>\n        <ReactTooltip\n          id=\"helpMakingSelection\"\n          place=\"top\"\n          type=\"dark\"\n          effect=\"solid\"\n          clickable={true}\n          className=\"helpTooltip\"\n          getContent={() =>\n            gotInput\n              ? null\n              : \"Highlight the meaningful portion of the text to continue\"\n          }\n        />\n      </div>\n    );\n    if (this.state.submittedCurrent) {\n      buttons = (\n        <button onClick={this.nextPage}>\n          {this.state.pageNum === this.state.gameSnippets.length\n            ? \"Summary →\"\n            : \"Next Page →\"}\n        </button>\n      );\n    }\n    //  console.log(this.state);\n    return (\n      <div className=\"playWrapper\">\n        <div className=\"playHeader\">\n          <span style={{ float: \"left\" }}>{this.state.gameName}</span>\n          <span style={{ float: \"right\" }}>\n            {this.state.pageNum}/{this.state.gameSnippets.length}\n          </span>\n        </div>\n        <div className=\"snipArea\">\n          <div className=\"padder\" data-tip data-for=\"yourSelection\">\n            {snip}\n          </div>\n          <ReactTooltip\n            id=\"yourSelection\"\n            place=\"left\"\n            type=\"dark\"\n            effect=\"solid\"\n            className=\"helpTooltip\"\n            getContent={() =>\n              !this.state.submittedCurrent ? null : \"Your interpretation\"\n            }\n          />\n          <div className=\"padder\" data-tip data-for=\"allSelection\">\n            {allSnip}\n          </div>\n          <ReactTooltip\n            id=\"allSelection\"\n            place=\"left\"\n            type=\"dark\"\n            effect=\"solid\"\n            className=\"helpTooltip\"\n            getContent={() =>\n              !this.state.submittedCurrent ? null : \"Everyone's interpretation\"\n            }\n          />\n        </div>\n        {paste}\n        {buttons}\n      </div>\n    );\n  }\n}\n\nexport default Play;\n","import React from \"react\";\nimport axios from \"axios\";\n\nconst uuidv4 = require(\"uuid/v4\");\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: [],\n      snippets: [],\n      gameName: \"\",\n      gameSnippets: \"\",\n      snippetText: \"\"\n    };\n    this.getData = this.getData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addGame = this.addGame.bind(this);\n    this.addSnippet = this.addSnippet.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    axios\n      .get(\"/api/games\")\n      .then(res => {\n        if (res.data) {\n          this.setState({\n            games: res.data\n          });\n        }\n      })\n      .catch(err => console.log(err));\n\n    axios\n      .get(\"/api/snippets\")\n      .then(res => {\n        if (res.data) {\n          this.setState({\n            snippets: res.data\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addGame() {\n    if (this.state.gameName.length > 0 && this.state.gameSnippets.length > 0) {\n      const formattedSnippets = this.state.gameSnippets\n        .split(\", \")\n        .map(item => {\n          return { id: item };\n        });\n      console.log(formattedSnippets);\n      const postData = {\n        name: this.state.gameName,\n        id: uuidv4(),\n        snippets: formattedSnippets\n      };\n      axios\n        .post(\"/api/games\", postData)\n        .then(res => {\n          if (res.data) {\n            this.setState({ gameName: \"\", gameSnippets: \"\" });\n            this.getData();\n          }\n        })\n        .catch(err => console.log(err));\n    } else {\n      console.log(\"input field required\");\n    }\n  }\n\n  addSnippet() {\n    if (this.state.snippetText.length > 0) {\n      const postData = {\n        text: this.state.snippetText,\n        id: uuidv4(),\n        interps: []\n      };\n      axios\n        .post(\"/api/snippets\", postData)\n        .then(res => {\n          if (res.data) {\n            this.setState({ snippetText: \"\" });\n            this.getData();\n          }\n        })\n        .catch(err => console.log(err));\n    } else {\n      console.log(\"input field required\");\n    }\n  }\n\n  deleteItem(id, resource) {\n    axios\n      .delete(`/api/${resource}/${id}`)\n      .then(res => {\n        if (res.data) {\n          this.getData();\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    let { games, snippets } = this.state;\n\n    const gameJSX = games.map(item => {\n      return (\n        <div className=\"item\" key={uuidv4()}>\n          <h4>Name</h4>\n          <p>{item.name}</p>\n          <h4>ID</h4>\n          <p>{item.id}</p>\n          <button onClick={() => this.deleteItem(item.id, \"games\")}>\n            Delete\n          </button>\n        </div>\n      );\n    });\n    const snippetJSX = snippets.map(item => {\n      return (\n        <div className=\"item\" key={uuidv4()}>\n          <h4>Text</h4>\n          <p>{item.text}</p>\n          <h4>ID</h4>\n          <p>{item.id}</p>\n          <button onClick={() => this.deleteItem(item.id, \"snippets\")}>\n            Delete\n          </button>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"wrapper\">\n        <h1>Games</h1>\n\n        <div className=\"wrapperFlex\">\n          {gameJSX}\n\n          <div className=\"item\">\n            <h2>Add Game</h2>\n            <h4>Name</h4>\n            <input\n              type=\"text\"\n              onChange={this.handleChange}\n              name=\"gameName\"\n              value={this.state.gameName}\n            />\n            <h4>Snippets</h4>\n            <input\n              type=\"text\"\n              onChange={this.handleChange}\n              name=\"gameSnippets\"\n              value={this.state.gameSnippets}\n            />\n            <button onClick={this.addGame}>Add Game</button>\n          </div>\n        </div>\n\n        <h1>Snippets</h1>\n        <div className=\"wrapperFlex\">\n          {snippetJSX}\n          <div className=\"item\">\n            <h2>Add Snippet</h2>\n            <h4>Text</h4>\n            <input\n              type=\"text\"\n              onChange={this.handleChange}\n              name=\"snippetText\"\n              value={this.state.snippetText}\n            />\n            <button onClick={this.addSnippet}>Add Snippet</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport { Redirect } from \"react-router\";\nconst queryString = require(\"query-string\");\n\nconst Instructions = props => {\n  const [redirect, setRedirect] = useState(undefined);\n  const [cookies, setCookie] = useCookies([\"newUser\"]);\n\n  setCookie(\"newUser\", false, { path: \"/\" });\n\n  const parsed = queryString.parse(props.location.search);\n  const next = parsed.redirect ? `/play/${parsed.redirect}` : \"/\";\n  console.log(cookies);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n\n  let touchInstructs = <span />;\n\n  if (props.isTouch) {\n    touchInstructs = (\n      <p>\n        Since you are on mobile, please copy your selection and paste it in the\n        input box below the text.\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"playWrapper padded\">\n      <h2>Instructions</h2>\n      <div className=\"padder\">\n        <p>\n          This survey aims to examine how people interpret meaning in text. You\n          will be presented with a group of snippets of text from a common\n          source.\n        </p>\n        <p>\n          <b>\n            For each snippet of text, determine which part you find{\" \"}\n            <em>meaningful</em> and highlight it.\n          </b>\n        </p>\n        {touchInstructs}\n        <p>\n          After submitting, you'll see how others interpreted the same passage\n          of text.\n        </p>\n        <p>Thanks for your contribution!</p>\n      </div>\n\n      <button onClick={() => setRedirect(next)}>Get Started →</button>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport VisualizeSnippet from \"./VisualizeSnippet\";\n\nconst uuidv4 = require(\"uuid/v4\");\nconst queryString = require(\"query-string\");\n\nclass VisualizeGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const parsed = queryString.parse(this.props.location.search);\n    const { id } = this.props.match.params;\n\n    if (parsed.next) {\n      axios\n        .get(`/api/games/`)\n        .then(res => {\n          if (res.data) {\n            let nextIndex = 0;\n            for (const i in res.data) {\n              if (res.data[i].id === id) {\n                nextIndex = i;\n              }\n            }\n            nextIndex = parseInt(nextIndex);\n            if (nextIndex + 1 > res.data.length - 1) {\n              nextIndex = 0;\n            } else {\n              nextIndex += 1;\n            }\n            this.setState({ nextPage: `/play/${res.data[nextIndex].id}` });\n          }\n        })\n        .catch(err => console.log(err));\n    }\n\n    axios\n      .get(`/api/games/${id}`)\n      .then(res => {\n        if (res.data) {\n          this.setState({\n            gameName: res.data[0].name,\n            gameSnippets: res.data[0].snippets\n          });\n          axios\n            .get(`/api/snippets/${res.data[0].snippets[0].id}`)\n            .then(res => {\n              if (res.data) {\n                this.setState({\n                  gamePlays: res.data[0].interps.length\n                });\n              }\n            })\n            .catch(err => console.log(err));\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    let viz = <div />;\n    let next = <div />;\n\n    if (this.state.gameSnippets) {\n      viz = this.state.gameSnippets.map(value => (\n        <div className=\"padder\" key={uuidv4()}>\n          <VisualizeSnippet snippetId={value.id} method=\"opacity\" />\n        </div>\n      ));\n    }\n\n    if (this.state.nextPage) {\n      next = (\n        <div>\n          <button\n            onClick={() => this.setState({ redirect: \"/\" })}\n            className=\"light\"\n          >\n            All Groups\n          </button>\n\n          <button\n            onClick={() => this.setState({ redirect: this.state.nextPage })}\n          >\n            Interpret Another Group →\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"playWrapper\">\n        <div className=\"playHeader\">\n          <span style={{ float: \"left\" }}>{this.state.gameName}</span>\n          {/*<span style={{ float: \"right\" }}>{this.state.gamePlays} Interpretations</span>*/}\n        </div>\n        <div className=\"snipArea\">{viz}</div>\n        {next}\n      </div>\n    );\n  }\n}\n\nexport default VisualizeGame;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\n\nimport Home from \"./components/Home\";\nimport Play from \"./components/Play\";\nimport Admin from \"./components/Admin\";\nimport Instructions from \"./components/Instructions\";\n\nimport VisualizeSnippet from \"./components/VisualizeSnippet\";\nimport VisualizeGame from \"./components/VisualizeGame\";\n\nimport \"./App.css\";\n\nconst uuidv4 = require(\"uuid/v4\");\n\nconst GetRandomGame = props => {\n  const [id, setId] = useState(\"\");\n\n  axios\n    .get(`/api/games`)\n    .then(res => {\n      if (res.data) {\n        const rand = Math.floor(Math.random() * res.data.length);\n        setId(res.data[rand].id);\n      }\n    })\n    .catch(err => console.log(err));\n\n  let res = <div />;\n  if (id !== \"\") {\n    res = <Redirect to={`/play/${id}/`} />;\n  }\n  return res;\n};\n\nconst App = () => {\n  const [userIdcookies, setUserIdCookie] = useCookies([\"userId\"]);\n  const [newUserCookies, setNewUserCookie] = useCookies([\"newUser\"]);\n\n  useEffect(() => {\n    if (userIdcookies.userId === undefined) {\n      setUserIdCookie(\"userId\", uuidv4(), { path: \"/\" });\n      setNewUserCookie(\"newUser\", true, { path: \"/\" });\n    }\n  });\n\n  const touch = !matchMedia(\"(pointer:fine)\").matches;\n\n  return (\n    <Router>\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={props => <Home {...props} userId={userIdcookies.userId} />}\n        />\n        <Route path=\"/random\" render={props => <GetRandomGame {...props} />} />\n        <Route\n          path=\"/instructions\"\n          render={props => <Instructions {...props} isTouch={touch} />}\n        />\n        <Route path=\"/admin\" component={Admin} />\n        <Route\n          path=\"/play/:id\"\n          render={props => (\n            <Play\n              {...props}\n              userId={userIdcookies.userId}\n              newUser={newUserCookies.newUser}\n              isTouch={touch}\n            />\n          )}\n        />\n        <Route\n          path=\"/results/game/:id\"\n          render={props => <Play {...props} userId={userIdcookies.userId} />}\n        />\n        <Route path=\"/snip-results/:id\" component={VisualizeSnippet} />\n        <Route path=\"/game-results/:id\" component={VisualizeGame} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CookiesProvider } from \"react-cookie\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}